{"name": "第二笔订单取消还车申请", "status": "failed", "statusDetails": {"message": "AssertionError: 404 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x106dd70e0>\ndata = {'case_info': {'json': None}, 'request_info': {'headers': {'Authorization': 'Bearer ${get_extract_value(customer_token...r/me/rental/ongoingOrders/${get_extract_value(paid_orderid2)}/assets/${get_extract_value(plan_asset2)}/$cancelReturn'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'cancel_return'))\n    def test_cancel_return(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 404, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 404 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "1688f5ce-7e20-44aa-a8ca-ee05969ada0d-attachment.txt", "type": "text/plain"}], "start": 1741931289498, "stop": 1741931295951, "uuid": "80de463e-1826-4c8d-aa05-655dd9f416ee", "historyId": "21c310cd489cf1a10ecf3c9707b0427d", "testCaseId": "9dc0dc9962dd8517ebd1ca724cbd5284", "fullName": "test_case.test_b2c_order.TestCustomer#test_cancel_return", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "5528-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}