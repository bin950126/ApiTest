{"name": "用验证码重置密码", "status": "failed", "statusDetails": {"message": "AssertionError: 400 == 1000", "trace": "self = <test_case.test_customer.TestCustomer object at 0x10c239eb0>\ndata = {'case_info': {'json': {'password': '123456', 'phoneNo': '+12025000001', 'resetCode': '111111'}}, 'request_info': {'he..., 'rental-client-id': 'com.rental.user.app.rybit.stg'}, 'method': 'POST', 'url': '/customer/auth/resetPasswordByCode'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('user_center.yaml', 'reset_password_bycode'))\n    def test_reset_password_bycode(self, data):\n>       ApiService().handle_case(data)\n\ntest_customer.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 400, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 400 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "66b77a8c-861a-4905-9ae9-3836323ed7b4-attachment.txt", "type": "text/plain"}], "start": 1741927443343, "stop": 1741927449819, "uuid": "20ecf3f7-8e61-4c02-8576-a3173c693b14", "historyId": "b47ea8c3fe8ceefd4e1d79288b7f0bf8", "testCaseId": "dee0965b4d59acbbb5580fd1ab34998a", "fullName": "test_case.test_customer.TestCustomer#test_reset_password_bycode", "labels": [{"name": "feature", "value": "用户中心"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_customer"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "4581-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_customer"}]}