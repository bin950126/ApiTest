{"name": "通过退还押金申请", "status": "failed", "statusDetails": {"message": "AssertionError: 400 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x10f42c9e0>\ndata = {'case_info': {'json': None}, 'request_info': {'headers': {'Authorization': 'Bearer ${get_extract_value(user_token)}',...method': 'POST', 'url': '/renting/deposits/$all/refundRequests/${get_extract_value(deposit_application_id)}/$approve'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'approve_deposit_refund'))\n    def test_approve_deposit_refund(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 400, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 400 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "17c71227-c774-44d0-850a-8ecffadaf914-attachment.txt", "type": "text/plain"}], "start": 1741926503179, "stop": 1741926509632, "uuid": "3bda518b-62a5-4559-be31-7d0c0199dd7e", "historyId": "2443d3cefe3b0fb572a4e2e6d5b317b5", "testCaseId": "6e92ec9333435856ae32ac22fd2ba7cb", "fullName": "test_case.test_b2c_order.TestCustomer#test_approve_deposit_refund", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "4352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}