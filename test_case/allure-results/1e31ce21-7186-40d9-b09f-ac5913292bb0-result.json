{"name": "更换订单中的车辆", "status": "failed", "statusDetails": {"message": "AssertionError: 409 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x1058e88c0>\ndata = {'case_info': {'json': {'assetNo': '${get_extract_value(plan_asset1)}'}}, 'request_info': {'headers': {'Authorization'...': '/renting/orders/${get_extract_value(paid_orderid2)}/assets/${get_extract_value(plan_asset2)}/lease/$replaceAsset'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'replace_asset'))\n    def test_replace_asset(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 409, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 409 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "1f2ad917-337b-425e-8b4b-53637dc6eeec-attachment.txt", "type": "text/plain"}], "start": 1741931521526, "stop": 1741931527974, "uuid": "f1600afd-fac4-4e08-b136-e714f116377f", "historyId": "751521b7c0b0713afaf70869085c2fa8", "testCaseId": "470f3390b3e818c2b08e3de8a7af659e", "fullName": "test_case.test_b2c_order.TestCustomer#test_replace_asset", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "5720-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}