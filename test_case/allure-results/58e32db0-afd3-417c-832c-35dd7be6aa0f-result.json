{"name": "强制结束订单", "status": "failed", "statusDetails": {"message": "AssertionError: 409 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x106094200>\ndata = {'case_info': {'json': {'reason': '接口自动化测试强制结束订单'}}, 'request_info': {'headers': {'Authorization': 'Bearer ${get_extra...ntal.user.app.rybit.stg'}, 'method': 'POST', 'url': '/renting/orders/${get_extract_value(paid_orderid2)}/$forceClose'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'force_close_order'))\n    def test_force_close_order(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 409, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 409 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "14395fc5-ea62-40bf-accb-bdfbafa09825-attachment.txt", "type": "text/plain"}], "start": 1741181250440, "stop": 1741181252072, "uuid": "503d644b-05f1-49b1-abf9-fdf134f56475", "historyId": "fcb32d2cb6689ff936da51f8f6034d0b", "testCaseId": "30ffced4d21281af7f4fc9d8c243de35", "fullName": "test_case.test_b2c_order.TestCustomer#test_force_close_order", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "10679-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}