{"name": "申请退还押金", "status": "failed", "statusDetails": {"message": "AssertionError: 409 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x105dad3a0>\ndata = {'case_info': {'json': {'assetCategoryId': '${get_extract_value(category_b)}', 'customerId': '${get_extract_value(cust...t-id': 'com.rental.user.app.rybit.stg'}, 'method': 'POST', 'url': '/customer/me/rental/deposits/$submitRefundRequest'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'apply_deposit_refund'))\n    def test_apply_deposit_refund(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 409, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 409 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "0e09fbe9-be02-4eb5-a39c-ac2fea56f69a-attachment.txt", "type": "text/plain"}], "start": 1741926656804, "stop": 1741926663233, "uuid": "9ef4100d-c661-485e-924e-af6ae550268a", "historyId": "327e00c4721aae01c30e236f5e0c2e3b", "testCaseId": "a1dcdd796eb83e8a73ca9561ea95236f", "fullName": "test_case.test_b2c_order.TestCustomer#test_apply_deposit_refund", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "4411-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}