{"name": "退回押金category_a", "status": "failed", "statusDetails": {"message": "AssertionError: 400 == 1000", "trace": "self = <test_case.test_b2c_order.TestCustomer object at 0x10e85ae10>\ndata = {'case_info': {'json': {'assetCategoryId': '${get_extract_value(category_a)}', 'partnerId': '${get_extract_value(parth...method': 'POST', 'url': '/renting/customers/${get_extract_value(customer_id)}/deposits/$refundByPartnerAssetCategory'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('B2C_order.yaml', 'refund_deposit'))\n    def test_refund_deposit(self, data):\n>       ApiService().handle_case(data)\n\ntest_b2c_order.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:87: in validate_response\n    self.equals(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncheck_value = 400, expect_value = 1000\n\n    @staticmethod\n    def equals(check_value, expect_value):\n        \"\"\"相等\"\"\"\n>       assert check_value == expect_value, f'{check_value} == {expect_value}'\nE       AssertionError: 400 == 1000\n\n../utils/AssertUtils.py:9: AssertionError"}, "attachments": [{"name": "log", "source": "3e51d29a-3af2-474c-8b83-679a08bd0b90-attachment.txt", "type": "text/plain"}], "start": 1741180770728, "stop": 1741180772533, "uuid": "3dbb438d-d732-416c-bb26-cdba3575f3c8", "historyId": "3f232f01741d8db2aca7afd144048671", "testCaseId": "6aa5e0b173c09cf0c0bf919965b76dd7", "fullName": "test_case.test_b2c_order.TestCustomer#test_refund_deposit", "labels": [{"name": "feature", "value": "B2C订单"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_b2c_order"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "10482-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_b2c_order"}]}