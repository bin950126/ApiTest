{"name": "删除用户", "status": "failed", "statusDetails": {"message": "AssertionError: 400 not in [1000, 401]", "trace": "self = <test_case.test_customer.TestCustomer object at 0x106be56a0>\ndata = {'case_info': {'json': None}, 'request_info': {'headers': {'Authorization': 'Bearer ${get_extract_value(customer_token...APTCHA_TOKEN', 'rental-client-id': 'com.rental.user.app.rybit.stg'}, 'method': 'DELETE', 'url': '/customer/me?dryRun'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case('user_center.yaml', 'delete_customer'))\n    def test_delete_customer(self, data):\n>       ApiService().handle_case(data)\n\ntest_customer.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../core/ApiService.py:57: in handle_case\n    AssertUtils().validate_response(result, validate)\n../utils/AssertUtils.py:85: in validate_response\n    self.equals_multiple(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.AssertUtils.AssertUtils object at 0x106d50860>, check_value = 400\nexpect_values = [1000, 401]\n\n    def equals_multiple(self, check_value, expect_values):\n        \"\"\"判断实际值是否等于期望值中的某一个\"\"\"\n>       assert check_value in expect_values, f'{check_value} not in {expect_values}'\nE       AssertionError: 400 not in [1000, 401]\n\n../utils/AssertUtils.py:13: AssertionError"}, "attachments": [{"name": "log", "source": "a805271a-bd68-4407-a48b-02052312e3da-attachment.txt", "type": "text/plain"}], "start": 1741921477017, "stop": 1741921483369, "uuid": "80a71059-fb84-4897-9abc-6174e2ad663a", "historyId": "dde544e44f447dfd4986239b45baf01f", "testCaseId": "d43c9ee73c86e46a3f2f7ec764f8678a", "fullName": "test_case.test_customer.TestCustomer#test_delete_customer", "labels": [{"name": "feature", "value": "用户中心"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_customer"}, {"name": "subSuite", "value": "TestCustomer"}, {"name": "host", "value": "bindeMacBook-Pro.local"}, {"name": "thread", "value": "3531-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_customer"}]}